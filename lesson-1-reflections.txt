How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It showed the differences  between the 2 files, and even allowed me to see 
    typos made in the new file. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Helps eliminate mistakes I previously made, or helps me avoid mistakes made
    by someone else when collaborating.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Makes me more aware (personally) of what changes I made, especially since I
    have to comment to make a commit. I noticed that when I don't write things
    down, I tend to forget information. Automatically saving versions like google
    docs removes the hard work, but it also removes me from the control I have
    over the versions that I am saving.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It might be because Git is more for developers, who would usually have files
    that are referencing each other, versus Google docs which would save the
    files separately since they just need to be treated as separate files.

How can you use the commands git log and git diff to view the history of files?

    <git log --stat> displays the extra information needed to see the history of
    files, including the differences between a certain commit and the previous 
    commit. <git diff> shows the diff for the staged file and the working file. 

How might using version control make you more confident to make changes that
could break something?

    Knowing how to make a branch and merging back to the master, or deleting the
    branch without affecting anything in the master gives me confidence to try 
    things that I would usually hesitate to do. It's like having save states in 
    emulators when playing Pokemon!

Now that you have your workspace set up, what do you want to try using Git for?

    For code I will be writing for RoboND, or for when I learn Python for development
    